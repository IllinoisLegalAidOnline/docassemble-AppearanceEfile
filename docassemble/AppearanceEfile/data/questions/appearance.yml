include:
  - docassemble.IlFeeWaiver:IL_fee_waiver_body.yml
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:phone-number-validation.yml
  - docassemble.ILAOEfile:ilao-interview-framework.yml
  - docassemble.ILAOEfile:shared-basic-questions.yml
  - docassemble.EFSPIntegration:efiling_integration.yml
  - docassemble.EFSPIntegration:case_search.yml
  - efile_ports.yml
---
metadata:
  title: Appearance with e-filing
  short title: Appearance with e-filing
  comment: This program helps you tell the court and the other parties that you are participating in a court case.
  authors:
    - Matt Newsted
    - Bryce Willey
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - delivery_parties: ALPeopleList.using(there_are_any=True)
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAOEfile:data/sources/il_courts.xlsx')
---
objects:
  - users[i].lawyer: ALIndividual
---
objects:
  - other_parties[i].lawyer: ALIndividual
---
objects:
  - delivery_parties[i].lawyer: ALIndividual
---
code: |
  al_form_type = 'existing_case'
  is_initial_filing = False
---
objects:
  - case_search: EFCaseSearch.using(court_id=court_id, do_what_choice="docket_lookup")
---
code: |
  target_case = case_search
---
code: |
  jurisdiction_id = 'illinois'
---
code: |
  proxy_conn = ProxyConnection(default_jurisdiction=jurisdiction_id) 
---
code: |
  logged_out_interview = "docassemble.ILAOEfile:efile-account-interview.yml"
---
# Road map
sections:
  - start: Start
  - review_appearance: Appearance
  - review_IL_fee_waiver: Fee waiver
  - review_efiling: E-filing info
  - download_and_efile: Download and e-file forms
---
code: |
  ilao_easy_form_title = "Appearance with e-filing"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/appearance-e-filing"
  form_name = "Appearance"
  filing_basis = 'filing_self'
  # TODO(brycew): We aren't handling "In Re" forms really yet with e-filing
  in_re_check = False
---
# backup for non-indexed: can be anything
code: |
  efile_case_category_filters = []
  efile_case_category_default = None
  efile_case_type_filters = []
  efile_case_type_default = None
---
code: |
  is_initial_filing = False
---
depends on: case_number
code: |
  # docket_number is used in the Fee Waiver interview, but case_number is
  # used in e-filing
  docket_number = case_number
---
# interview order block
mandatory: True
code: |
  sees_nav_bar
  set_progress(5)
  nav.set_section('start')
  is_initial_filing
  how_to_use
  accept_terms
  lawsuit_information
  if case_is_invalid_type:
    kickout_self_reported_case_type
  if can_check_efile:
    tyler_login
  whats_next
  nav.set_section('review_appearance')
  set_progress(15)
  # E-file specific
  if can_check_efile:
    case_search.found_case
    # Keeping in the non_indexed stuff in case we want it back
    if not case_search.case_was_found: # and not case_search.can_file_non_indexed_case:
      needs_all_info = True
      can_check_efile = False
      if case_search.do_what_choice == 'docket_lookup':
        case_number = case_search.docket_number_from_user
    #elif not case_search.case_was_found and case_search.can_file_non_indexed_case:
    #  needs_all_info = True
    #  case_number
    #  efile_case_type
    #  efile_case_category
    else:
      if will_kickout(case_search.found_case):
        kickout_case_type_screen
      needs_all_info = False
      previous_case_id
      case_number
      efile_case_type
      efile_case_category

      add_existing_users
      show_existing_users
      users[0].name.first

  # ask if whey want to add any more new parties to the case
  if can_check_efile:
    users.gather(complete_attribute='is_new')
    set_progress(30)
    other_parties.gather(complete_attribute='is_new')
  else:
    users.gather()
    set_progress(30)
    other_parties.gather()
  user_role

  set_progress(40)
  trial_court
  case_number
  trial_with
  set_progress(50)
  
  delivery_intro
  if delivery_parties.number() > 8:
    extra_delivery_forms
  for person in delivery_parties[:8]:
    if person.is_represented:
      person.lawyer.name.first
    person.address.address
    if person.knows_delivery_method:
      person.mail_delivery
      person.delivery_date
  set_progress(75)
  
  for person in delivery_parties[:8]:
    if person.knows_delivery_method == False or person.hand_delivery == True:
      hand_delivery_info
     
  users[0].address.address
  users[0].phone_number
  if can_check_efile:
    users[0].email_notice = True
    if defined("users[0].email"):
      email_alert
  if users[0].email_notice:
    users[0].email
  lead_contact = users[0]
  
  set_progress(90)

  users[0].has_email_address = users[0].email_notice

  if can_check_efile:
    docket_number

  if user_wants_efile:
    nav.set_section('review_IL_fee_waiver')
    fee_waiver_introduction_screen
    interview_order_IL_fee_waiver

  if can_check_efile:
    nav.set_section('review_efiling')
    illinois_appearance_bundle.has_courtesy_copies = False
    illinois_appearance_bundle.completed
    illinois_jury_demand_bundle.has_courtesy_copies = False
    illinois_jury_demand_bundle.completed
    IL_fee_waiver_order.has_courtesy_copies = False
    IL_fee_waiver_full_for_court.has_courtesy_copies = False
    IL_fee_waiver_supplement.has_courtesy_copies = False
    IL_fee_waiver_supplement.completed
    IL_fee_waiver_full_for_court.completed
    IL_fee_waiver_order.completed
    tyler_payment_id = default_jurisdiction_waiver
    all_required_screens_shown
    ready_to_efile
  else:
    ready_to_efile = False

  if ready_to_efile:
    signature_choice = 'add name'
    e_signature = True
    # if e-filing, just use the e-signature to keep things simple
    inform_of_efile_e_signature
    # TODO(brycew): redo HTML emailing
    email_confirmation_subject = email_confirmation.subject
    email_confirmation_contents = email_confirmation.content
    acceptance_subject = acceptance_email.subject
    acceptance_contents = acceptance_email.content
    rejected_subject = rejection_email.subject
    rejected_contents = rejection_email.content
    neutral_subject = neutral_email.subject
    neutral_contents = neutral_email.content
    # Don't show the review screen to the user before efiling
    efile_user_reviewed = True
  else:
    e_signature
  set_progress(100)
  nav.set_section('download_and_efile')
  get_docs_screen
  ending_screen
---
code: |
  def will_kickout(case):
    if case.category.upper() == "CONFIDENTIAL":
      return True
    # Case categories determine a lot of things, I'm not comfortable with contining
    # if it's not there.
    if case.category not in case_category_map and case.case_type not in case_type_map:
      return True
    case_category_name = (case_category_map.get(case.category) or {}).get('name', '').lower()
    if case_category_name in ['probate', 'guardianship', 'juvenile abuse', 'criminal misdemeanor', 'quasi-criminal', 'criminal felony']:
      return True
    # case types change more, so okay with not being there
    case_type_name = (case_type_map.get(case.case_type) or {}).get('name', '').lower()
    if 'name change' in case_type_name or 'change of name' in case_type_name:
      return True
    return False
---
id: kickout_case_type_screen
event: kickout_case_type_screen
question: |
  You cannot use this form in your case
subquestion: |
  This online form will not work in certain cases. You will need to ask the circuit clerk at ${ trial_court }
  which form to use and how to file it. You can call them at ${ trial_court.phone }.

  Your case type, ${ case_category_map.disp(case_search.found_case.category, 'name') }, ${ case_type_map.disp(case_search.found_case.case_type, 'name') } is in:
  
  * Name change for an adult or child
  * Guardianship for a minor or an adult
  * Probate, or a case involving a will or an estate
  * Juvenile abuse and neglect
  * Criminal (misdemeanor or felony)

  Contact your local circuit clerk, or you can text or call [**IllinoisCourtHelp**](https://ilcourthelp.gov) at (833) 411-1121 for assistance.
---
id: kickout_self_reported_case_type
event: kickout_self_reported_case_type
question: |
  Sorry
subquestion: |
  The Appearance form made by this program does not work with these case types.

  * Name change for an adult or a child
  * Guardianship for a minor or an adult
  * Probate, or a case involving a will or an estate
  * Juvenile abuse and neglect
  * Criminal (misdemeanor or felony)

  Contact your local circuit clerk, or you can text or call [**IllinoisCourtHelp**](https://ilcourthelp.gov) at (833) 411-1121 for assistance.
---
id: pre-screen case type
question: |
  Are you filing an Appearance into one these case types?
subquestion: |
  
  * Name change for an adult or a child
  * Guardianship for a minor or an adult
  * Probate, or a case involving a will or an estate
  * Juvenile abuse and neglect
  * Criminal (misdemeanor or felony)

fields:
  - no label: case_is_invalid_type
    datatype: yesnoradio
---
depends on:
  - illinois_appearance_attachment.document_type
code: |
  illinois_appearance_additional.document = illinois_appearance_attachment.document_type
  illinois_appearance_additional_2.document = illinois_appearance_attachment.document_type
  illinois_appearance_additional_3.document = illinois_appearance_attachment.document_type
---
depends on:
  - illinois_appearance_attachment.document_type
code: |
  if hasattr(illinois_appearance_attachment, 'document_type') and illinois_appearance_attachment.document_type in IL_fee_waiver_full_for_court.document_type_map.keys():
    IL_fee_waiver_attachment.document_type = illinois_appearance_attachment.document_type
    IL_fee_waiver_supplement.document_type = illinois_appearance_attachment.document_type
    IL_fee_waiver_order.document_type = illinois_appearance_attachment.document_type
  elif hasattr(illinois_appearance_bundle, 'document_type') and illinois_appearance_bundle.document_type in IL_fee_waiver_full_for_court.document_type_map.keys():
    IL_fee_waiver_attachment.document_type = illinois_appearance_bundle.document_type
    IL_fee_waiver_supplement.document_type = illinois_appearance_bundle.document_type
    IL_fee_waiver_order.document_type = illinois_appearance_bundle.document_type
---
id: next-step-fee-waiver
question: |
  Next Step: Fee Waiver
subquestion: |
  To e-file with this program, you must file a Fee waiver.
  The next screens will help you make a Fee waiver.
continue button field: fee_waiver_introduction_screen
---
if: user_wants_efile
code: |
  IL_fee_waiver_Post_interview_instructions.enabled = True
  IL_fee_waiver_attachment.enabled = True
  IL_fee_waiver_order.enabled = True

  if trial_court.address.county == "Winnebago":
    IL_fee_waiver_supplement.enabled = True
  else:
    IL_fee_waiver_supplement.enabled = False
---
if: not user_wants_efile
code: |
  IL_fee_waiver_Post_interview_instructions.enabled = False
  IL_fee_waiver_attachment.enabled = False
  IL_fee_waiver_order.enabled = False
  IL_fee_waiver_supplement.enabled = False
---
code: |
  users[i].name.first
  users[i].party_type
  users[i].is_new = True
---
code: |
  other_parties[i].name.first
  other_parties[i].party_type
  other_parties[i].is_new = True
---
code: |
  other_parties[i].party_type_filters = is_other_party_filters
  if not user_started_case: 
    other_parties[i].party_type_default = '20646'
  else:
    other_parties[i].party_type_default = '20641'
---
code: |
  users[i].party_type_filters = is_user_filters
  if not user_started_case:
    users[i].party_type_default = '20641'
  else:
    users[i].party_type_default = '20646'
---
id: welcome
question: |
  Appearance with e-filing
subquestion: |
  Welcome to Illinois Legal Aid Online's **Appearance with e-filing** Easy Form.

  This program creates a form that tells the court and the other parties that you are participating in a court case.
  
  If you are also filing a Fee waiver, you can use this program to e-file both forms.
  
  To learn more, read ILAO's article about [**responding to a lawsuit**](https://www.illinoislegalaid.org/node/32236).
field: sees_nav_bar
---
id: instructions
continue button field: how_to_use
question: |
  Instructions
subquestion: |
  To use this program you will need: 

  * Names and addresses of the other parties, 
  * Names and addresses of the other parties’ lawyers, and 
  * The court case number. 

  You can find this information on other court papers you have about this case. 

  Set aside 10 to 15 minutes to finish this program. You can login and save your work to return to later. 
 
  ${ collapse_template(help_example) }

  Click on **{green words}** to learn what they mean. Some questions have a
  question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0") } that also gives help.
---
template: help_example
subject: |
  **You can expand sections like this to show more information.**
content: |
  This is an example of help. Click again to hide.
---
id: whats next
continue button field: whats_next
question: |
  After you finish this program
subquestion: |
  % if not can_check_efile:
  After you download your **{Appearance}**, you must file it with the court. This program does not file your ${ form_name } for you.
 
  % else:
  You can e-file your appearance and fee waiver at the end of this program. You will
  get email when your forms are received and accepted by the circuit clerk. If they
  are rejected, you will have to refile.
  
  If you run into an unexpected error, you can also file it with the court yourself.
  % endif
  Read the "How to File an Appearance" instructions you can download at the end of this program.
---
id: accept terms
question: |
  Terms of use
subquestion: |
  This program does not provide legal advice. It does not take the place of advice from a lawyer.

  Using this program does not create an attorney-client relationship between you and Illinois Legal Aid Online or its employees.

  ${ collapse_template(get_legal_help) }

fields:
  - To continue, you must accept the [**terms of use**](https://www.illinoislegalaid.org/about/terms-of-use).: accept
    datatype: checkboxes
    none of the above: False
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use. 
continue button field: accept_terms
---
template: get_legal_help
subject: |
  **What if I need legal advice?**
content: |  
  If you have questions or concerns about your legal problem and want legal advice you should talk to a lawyer.
  
  Use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
---
id: not legal advice
event: not_legal_advice
question: |
  Sorry
subquestion: |
  You cannot continue unless you understand this program does not give legal advice and accept the [**terms of use**](https://www.illinoislegalaid.org/about/terms-of-use).

  This program will only help you complete the legal documents you want. By providing this program we are not giving you legal advice. Your use of this program does not mean that Illinois Legal Aid Online will provide you with a lawyer or with any individual legal help.

  If you have questions or concerns about your legal problem and want legal advice you should talk to a lawyer. If you would like help finding free or low-cost legal services in your area, use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help).

buttons:
  - Exit: exit
  - Restart: restart
---
id: lawsuit information
continue button field: lawsuit_information
question: |
  Lawsuit information
subquestion: |
  If you received a "Complaint and Summons", you have been sued. You need to tell the court you want to participate in your case. In some cases, you need to file an **{Answer}** to respond to the Complaint.
  
  If you do not respond, you can be found in default, and the court can rule against you. In some cases, like evictions, you do not need to file an **{Appearance}**. Instead, you can attend your court hearing.
  
  To learn more, read ILAO's article about [**responding to a lawsuit**](https://www.illinoislegalaid.org/node/32236).
  
  ${ collapse_template(started_lawsuit_help) }
  
  If you would like help finding free or low-cost legal services in your area, use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help).
---
template: started_lawsuit_help
subject: |
  **What if I started the lawsuit?**
content: |
  You can also file an Appearance if you started the lawsuit. Usually, you only need to file an Appearance if you had a lawyer in the case before, but now you want to represent yourself.
---
id: any other users
question: |
  % if al_form_type in ['starts_case','existing_case','appeal']:
  Is anyone else on your side of this case?
  % else:
  Is anyone else adding their name to this form with you?
  % endif
subquestion: |
  % if len(users.elements) > 1:
  So far you have told us about ${comma_and_list(users.complete_elements().full_names())}.
  % endif  
fields:
  - no label: users.there_is_another
    datatype: yesnoradio
---
template: other_parties_help
subject: |
  **How do I know if there are others?**
content: |
    % if user_started_case:
    You said you are the **Plaintiff** or the **Petitioner.** The other people on your side of the case would be co-plaintiffs or co-petitioners.
    % else:
    You said you are the **Defendant** or the **Respondent.** The other people on your side of the case would be co-defendants or co-respondents.
    % endif
---
depends on:
  - user_started_case
sets:
  - users[i].name.first
id: other users names
question: |
  % if al_form_type in ['starts_case','existing_case','appeal']:
  What is the name of the ${ ordinal(i) } person who is part of the case with you?
  % else:
  What is the name of the ${ ordinal(i) } person who is adding their name to
  this form with you?
  % endif
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      users[i].name_fields(person_or_business='unsure')
---
template: long_name_help
subject: |
  **What if the person's name doesn't fit into 4 fields?**
content: |
  If the party has a long name like "Jane Smith, Director of Housing," select **Business or organization**. You can then enter the full name and title.
---
# modified other opposing parties question
# Turned off for now, awaiting AOIC reply
#id: any other opposing parties
#question: |
#  % if user_started_case:
#  Is there another **defendant** or **respondent** in this case?
#  % else:
#  Is there another **plaintiff** or **petitioner** in this case?
#  % endif
#subquestion: |
#  % if len(other_parties.elements) >= 1:  
#  So far you have told us about ${comma_and_list(other_parties.complete_elements().full_names())}.
#  % endif
#fields:
#  - "Anyone else?": other_parties.there_is_another
#    datatype: yesnoradio
---
### NOTE(brycew): for now, not letting you add other parties on either side
if: can_check_efile and case_search.case_was_found
code: |
  other_parties.there_is_another = False
---
if: can_check_efile and case_search.case_was_found
code: |
  users.there_is_another = False
---
id: is the user the plaintiff or defendant?
comment: |
  This question is asked if the interview can be used by both
  a Plaintiff and a Defendant. It sets the value of `user_role`,
  `plaintiffs`, `defendants`, `petitioners` and `respondents`.
  
  If you know your interview is exclusively
  used by the Plaintiff or Defendant, set `user_role = 'plaintiff'` or 
  `user_role='defendant'` in your code.
question: |
  Did you start this case, or are you responding to a case
  that someone else started?
subquestion: |
  ${ collapse_template(help_user_ask_role_template) }
fields: 
  - no label: user_ask_role
    datatype: radio
    choices:
      - Started this case: plaintiff
      - Responding to this case: defendant
  - note: |
      Okay, you are the **Plaintiff** or Petitioner in this case. The other 
      side is the **Defendant** or Respondent.
    show if:
      variable: user_ask_role
      is: "plaintiff"
  - note: |
      Okay, you are the **Defendant** or Respondent in this case. The other 
      side is the **Plaintiff** or Petitioner.
    show if:
      variable: user_ask_role
      is: "defendant"
---
depends on:
  - user_started_case
sets:
  - other_parties[i].name.first
id: names of opposing parties
question: |
  % if user_started_case:
  Name of ${ ordinal(i) } **defendant** or **respondent** in this case
  % else:
  Name of ${ ordinal(i) } **plaintiff** or **petitioner** in this case
  % endif
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
code: |
  allowed_courts = ['Circuit']
---
id: trial court county
continue button field: case_county
question: |
  In which county was this case filed?
fields:
  - Which county?: trial_court_index
    datatype: integer
    code: |
      court_county_lookup()
---
code: |
  def court_county_lookup(lowercase=False):
    all_court_counties = court_list._load_courts()['address_county'].items()
    filtered_courts = [(-1, "cook")] if lowercase else [(-1, "Cook")]
    for court in all_court_counties:
      if court[1] != "Cook":
        court_name = court[1].lower() if lowercase else court[1]
        filtered_courts.append((court[0],court_name))
    return sorted( filtered_courts, key=lambda y: y[1])
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', 15)
    trial_court.address.county = "Cook"
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
---
id: case number
question: |
  What is the case number?
subquestion: |
  ${ collapse_template(case_number_help) }
fields:
  - Case number: case_number
---
template: case_number_help
subject: |
  **Where can I find this?**
content: |  
  The case number should be on your court papers. Look at the Complaint or Petition, or the Summons if you received one. It is usually in the top-right part of the first page.
  
  If you started the case, the court clerk should have given you the case number.
  
  In this example, the case number is **2022 EXAMPLE 123**.
  
  [FILE case_number_example.png, 100%, Summons form showing case number]
---
if: not user_wants_efile
id: trial by jury
question: |
  Who do you want to decide your case?
subquestion: |
  Note: You do not have a right to a jury trial in every case. There can be an additional fee for a jury trial
  if you are not filing a fee waiver.

  To learn more, read ILAO's article about [**jury trials and judge trials**](https://www.illinoislegalaid.org/node/178441).
field: trial_with
choices:
  - A judge: judge_only
  - A judge and a 6-person jury: judge_and_6_jury
  - A judge and a 12-person jury: judge_and_12_jury
---
if: user_wants_efile
id: trial by jury - already fee waiver
question: |
  Who do you want to decide your case?
subquestion: |
  Note: You do not have a right to a jury trial in every case.

  To learn more, read ILAO's article about [**jury trials and judge trials**](https://www.illinoislegalaid.org/node/178441).
field: trial_with
choices:
  - A judge: judge_only
  - A judge and a 6-person jury: judge_and_6_jury
  - A judge and a 12-person jury: judge_and_12_jury
---
id: phone number
question: |
  What is your phone number?
fields:
  - Phone: users[0].phone_number
    datatype: al_international_phone
    required: False
---
id: notice by email
question: |
  Do you have an email address?
subquestion: |
  If you have an email address, you must list it so the court and other parties can contact you about this case.
fields:
  - "Email?": users[0].email_notice
    datatype: yesnoradio
---
if: not users[0].is_form_filler
id: email address
question: |
  What email address do you want to use for this case?
subquestion: |
  If you do not want to enter your personal email address, you can create a new email account to get email about your case.
  
  **Be sure to check this email daily, otherwise you may miss important information about your case.**
fields:
  - Email address: users[0].email
    datatype: email
    #required: False
---
id: email alert
question: |
  Important email information
subquestion: |
  This email address will be used on your Appearance: **${ users[0].email }**

  **Be sure to check this email daily, otherwise you may miss important information about your case.**
continue button field: email_alert
---
if: not can_check_efile
code: |
  users[0].is_form_filler = False
---
id: e-signature
question: |
  Do you want to add your e-signature to your ${ form_name }?
subquestion: |
  If you do not add your e-signature, you can sign your paper form later.

  ${ collapse_template(signature_help) }
fields:
  - "Add e-signature?": e_signature
    datatype: yesnoradio
---
template: signature_help
subject: |
  **What does it mean to sign the *Appearance*?**
content: |
  By signing your *Appearance*, you are certifying that:

  * Everything on the form is true and correct, and
  * You understand that making a false statement on the form is perjury, which can result in criminal penalties.

  See the **[Code of Civil Procedure, 735 ILCS 5/1-109](https://www.ilga.gov/legislation/ilcs/documents/073500050k1-109.htm)**, for more information.
---
id: inform e-signature
question: |
  Signing your forms
subquestion: |
  Since you are e-filing, your name will be added as an e-signature to your forms.
continue button field: inform_of_efile_e_signature
---
reconsider: True
code: |
  delivery_parties = DAList("delivery_parties", elements = other_parties + users[1:])
# changed order to keep it a DAList
---
id: extra delivery forms required
continue button field: extra_delivery_forms
question: |
  Additional Proof of Delivery
subquestion: |
  This program makes the Proof of Delivery forms for the first 8 parties.
  
  You will need to fill out *Additional Proof of Delivery* forms for the other parties in your case. 
  
  You can download blank *Additional Proof of Delivery* forms at the end of this program.
---
id: delivery intro
continue button field: delivery_intro
question: |
  Send your ${ form_name } to all other parties
subquestion: |
  These are the other parties in this case: ${comma_and_list(delivery_parties)}.

  You must send a copy of your ${ form_name } to each of them.
  If someone in the case has a lawyer, you must send it to the lawyer.

  % if can_check_efile and case_search.found_case.attorneys:
  % if len(lawyered_parties) > 1:
  Through e-filing information, we know that ${ comma_and_list(lawyered_parties) } have lawyers.

  % for p in lawyered_parties:
  * ${ p }'s lawyer is ${ p.lawyer }
  % endfor
  % elif len(lawyered_parties) == 1:
  Through e-filing information, we know that ${ comma_and_list(lawyered_parties) } has a lawyer, ${ lawyered_parties[0].lawyer }.
  % endif
  % endif
---
code: |
  lawyered_parties = [p for p in delivery_parties if p.found_lawyer]
---
id: has lawyer
generic object: ALIndividual
question: |
  Does ${ x.name.full(middle="full") } have a lawyer in this case?
subquestion: |
  % if defined('case_search.found_case') and case_search.found_case and hasattr(x, 'tyler_id'):
  % if not case_search.found_case.party_to_attorneys.get(x.tyler_id):
  ${ x.name.familiar() } does not have a lawyer in the electronic system,
  but they could have gotten one more recently.
  % endif
  % endif
field: x.is_represented
choices:
  - Yes: True
  - No: False
  - I don't know: null 
# note: null will be None in review screen
---
id: add lawyer
generic object: ALIndividual
question: |
  Who is  ${ x.name.full(middle="full") }'s lawyer?
fields:
  - First name: x.lawyer.name.first
  - Middle name: x.lawyer.name.middle
    required: False
  - Last name: x.lawyer.name.last
  - Suffix: x.lawyer.name.suffix
    code: |
      name_suffix()
    required: False  
---
generic object: ALIndividual
code: |
  if defined('case_search.found_case') and case_search.found_case and hasattr(x, 'tyler_id'):
    if case_search.found_case.party_to_attorneys.get(x.tyler_id):
      x.is_represented = True
      # get first lawyer 
      tmp_lawyer_id = next(iter(case_search.found_case.party_to_attorneys.get(x.tyler_id)), None)
      tmp_lawyer =  case_search.found_case.attorneys.get(tmp_lawyer_id)
      if tmp_lawyer:
        x.lawyer = tmp_lawyer.copy_deep(x.instanceName + '.lawyer')
      else:
        log(f"Something went wrong when parsing attorneys, party mapped to attoney that doesn't exist: {case_search.found_case}")
        x.lawyer
      x.found_lawyer = True
    else:
      x.found_lawyer = False
  else:
    x.found_lawyer = False
---
id: delivery party address
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
generic object: ALIndividual
question: |
  % if x.is_represented:
  What is ${ x.lawyer.name.full(middle="full") }'s address?
  % else:
  What is ${ x.name.full(middle="full") }'s address?
  % endif
fields:
  - Street address: x.address.address
    address autocomplete: True
  - Address line 2: x.address.unit
    required: False
  - City: x.address.city
  - State: x.address.state
    code: |
      states_list()
    default: IL
  - ZIP code: x.address.zip
---
id: users delivery party address
sets:
  - users[i].address.address
  - users[i].address.city
  - users[i].address.zip
generic object: ALIndividual
question: |
  % if users[i].is_represented:
  What is ${ users[i].lawyer.name.full(middle="full") }'s address?
  % else:
  What is ${ users[i].name.full(middle="full") }'s address?
  % endif
fields:
  - Street address: users[i].address.address
    address autocomplete: True
  - Address line 2: users[i].address.unit
    required: False
  - City: users[i].address.city
  - State: users[i].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[i].address.zip
---
generic object: ALIndividual
code: |
  if hasattr(x, 'lawyer'):
    if hasattr(x.lawyer.address, 'address'):
      x.address.address = x.lawyer.address.address
    if hasattr(x.lawyer.address, 'unit'):
      x.address.unit = x.lawyer.address.unit
    if hasattr(x.lawyer.address, 'city'):
      x.address.city = x.lawyer.address.city
    if hasattr(x.lawyer.address, 'state'):
      x.address.state = x.lawyer.address.state
    if hasattr(x.lawyer.address, 'zip'):
      x.address.zip = x.lawyer.address.zip
---
id: knows delivery method
generic object: ALIndividual
question: |
  % if x.is_represented:
  Do you know **how** and **when** you will send your ${ form_name } to ${ x.lawyer.name.full(middle="full") }?
  % else:
  Do you know **how** and **when** you will send your ${ form_name } to ${ x.name.full(middle="full") }?
  % endif
subquestion: |
  ${ collapse_template(delivery_method_help) }

  If you do not know this now, you can add it to the Proof of Delivery section of your forms later.
field: x.knows_delivery_method
choices:
  - Yes: True
  - No: False
---
template: delivery_method_help
subject: |
  **What are my delivery options?**
content: |
  You can deliver the forms by:
  
  * The court's **{e-filing system}**,
  * Email,
  * US mail or a delivery company (like UPS or FedEx), or
  * Hand delivery.
  You may use US mail, a delivery company, or hand delivery if you or the other party **does not** have an email address.
terms:
  - e-filing system: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP).
      This form does not currently handle delivery through the e-filing system.
---
id: user party delivery method
#changed from generic object to users to allow for changing answers via Back
#generic object: ALIndividual
question: |
  % if users[i].is_represented:
  How will you send your ${ form_name } to ${ users[i].lawyer.name.full(middle="full") }?
  % else:
  How will you send your ${ form_name } to ${ users[i].name.full(middle="full") }?
  % endif
subquestion: |
  **Note:** If you do not know this now, be sure to add to to the Proof of Delivery section of your forms later.

  You may use US mail, a delivery company, or hand delivery if you or the other party **does not** have an email address.
  
  ${ collapse_template(efiling_help) }
fields:
  - E-filing system: users[i].efm_delivery
    datatype: yesnowide
    help: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP).
    show if:
      code: |
        not can_check_efile
  - Email: users[i].email_delivery
    datatype: yesnowide
  - Email address: users[i].delivery_email
    datatype: email
    show if: 
      variable: users[i].email_delivery
      is: True
    required: False
  - US mail or a delivery company (like UPS or FedEx): users[i].mail_delivery
    datatype: yesnowide
  - Hand delivery: users[i].hand_delivery
    datatype: yesnowide
---
template: efiling_help
subject: |
  **What if I need help?**
content: |  
  If you need help delivering by email or using the e-filing service provider, you can visit a [**Legal Self-Help Center**](https://www.illinoislegalaid.org/get-legal-help/lshc-directory) or you can call or text [Illinois Court Help](https://www.ilcourthelp.gov) at 833-411-1121.
---
id: other party delivery method
# generic object: ALIndividual
#changed from generic object to other_parties to allow for changing answers via Back
question: |
  % if other_parties[i].is_represented:
  How will you send your ${ form_name } to ${ other_parties[i].lawyer.name.full(middle="full") }?
  % else:
  How will you send your ${ form_name } to ${ other_parties[i].name.full(middle="full") }?
  % endif
subquestion: |
  **Note:** If you do not know this now, be sure to add to to the Proof of Delivery section of your forms later.

  You may use US mail, a delivery company, or hand delivery if you or the other party **does not** have an email address.
  
  ${ collapse_template(efiling_help) }
fields:
  - E-filing system: other_parties[i].efm_delivery
    datatype: yesnowide
    help: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP).
    show if:
      code: |
        not can_check_efile
  - Email: other_parties[i].email_delivery
    datatype: yesnowide
  - Email address: other_parties[i].delivery_email
    default: ${ other_parties[i].lawyer.email if hasattr(other_parties[i], 'lawyer') and hasattr(other_parties[i].lawyer, 'email') else '' }
    datatype: email
    show if: 
      variable: other_parties[i].email_delivery
      is: True
    required: False
  - US mail or a delivery company (like UPS or FedEx): other_parties[i].mail_delivery
    datatype: yesnowide
  - Hand delivery: other_parties[i].hand_delivery
    datatype: yesnowide
---
id: delivery time
generic object: ALIndividual
question: |
  % if x.is_represented:
  When will you send your ${ form_name } to ${ x.lawyer.name.full(middle="full") }?
  % else:
  When will you send your ${ form_name } to ${ x.name.full(middle="full") }?
  % endif
subquestion: |
  **Note:** If you do not know this now, be sure to add to to the Proof of Delivery section of your forms later.
fields:
  - Date: x.delivery_date
    datatype: date
    required: False
    min: ${ today().format("yyyy-MM-dd") }
  - Time: x.delivery_time
    datatype: time
    required: False
validation code: |
  if (not showifdef('x.delivery_date')):
    x.knows_delivery_date = False
  else:
    x.knows_delivery_date = True
  if (not showifdef('x.delivery_time')):
    x.knows_delivery_time = False
  else:
    x.knows_delivery_time = True
---
id: hand delivery info
continue button field: hand_delivery_info
#generic object: ALIndividual
question: |
  Check your Proof of Delivery
subquestion: |
  **Don't forget!** Make sure you review and complete the Proof of Delivery section of your forms. 
  
  [FILE proof_of_delivery_snip.png, 100%, Proof of Delivery section of forms]

  **Instructions when delivering your forms by hand:**

  * If a party in your case does not have a lawyer, you can hand-deliver the forms to them or to a family member who is 13 or older at their home.
  * If they do have a lawyer, you can hand-deliver the forms to the lawyer or to the lawyer's office.

---
if: ready_to_efile
id: get docs screen
event: get_docs_screen
question: |
  % if not (defined('efile') and efile):
  Download and e-file
  % else:
  Download
  % endif
subquestion: |
  
  View and download your forms below. Click **Make changes** to fix any mistakes.

  **You need to deliver your Appearance to the other parties in your case.**

  % if (defined('efile') and efile):
  **Note:** You already e-filed your forms. Any changes you make will not appear in the e-filed forms.
  
  % endif
  ${ action_button_html(url_action('review_appearance'), label=':edit: Make changes', color='success', size="md") }

  ${ al_user_bundle.download_list_html() }
  % if not (defined('efile') and efile):
  &nbsp;
  
  ##### E-file

  Click **E-file your forms** to e-file your form with the clerk of the ${ trial_court }.
  
  ${ action_button_html(url_ask([{'recompute': ['efile']}]), label='E-file your forms', icon='file-export', size="md", id_tag="efile")}
  % endif
  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
  &nbsp;
  
  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} Sign-in](${url_of('login', next=interview_url())}) or [register](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAOEfile:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
if: not ready_to_efile
id: get docs screen
event: get_docs_screen
question: |
  Download
subquestion: |
  
  Your forms are ready. View and download your forms below. Click **Make changes** to fix any mistakes.

  ${ action_button_html(url_action('review_appearance'), label=':edit: Make changes', color='success', size="md") }

  This program does not file your Appearance with the court or deliver it to other parties in your case. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/efileil/).
  
  ${ al_user_bundle.download_list_html() }

  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  **Note:** This program does not file your Appearance with the court or deliver it to other parties in your case. Learn about [e-filing in Illinois](https://www.illinoiscourts.gov/eservices/efileil/).
  
  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign-in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAOEfile:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
# old email forms functionality
#id: email forms
#question: |
#  Email your forms
#subquestion: |
#  Where should we email your forms?
#  
#  This program does not file your Appearance with the court or deliver it to other parties in your case. You will need to do this yourself.
#fields:
#  - Email address: users[0].delivery_email
#    datatype: email
#continue button label: Send
#---
#template: forms_email
#subject: |
#  Appearance forms
#content: |
#  Your forms are attached.
#  
#  Thanks for using ILAO Easy Forms!
#  
#  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
#---
#id: ending screen
#event: ending_screen
#question: |
#  All done
#subquestion: |
#  Thank you for using ILAO Easy Forms!
#  
#  This program does not file your Appearance with the court or deliver it to other parties in your case. You will need to do this yourself.
##buttons:
##  - Delete answers and restart: restart
##  - Exit: exit
#under: |
#  % if not user_logged_in():
#  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} Sign-in](${url_of('login', next=interview_url())}) or [register](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
#  % endif 
#
#  &nbsp;
#  
#  ${ action_button_html(interview_url(i="docassemble.ILAOEfile:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Appearance forms
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---
only sets:
  - previous_case_id
  - case_number
  - efile_case_category
  - efile_case_type
if: can_check_efile and case_search.case_was_found
depends on: case_search.found_case
code: |
  previous_case_id = case_search.found_case.tracking_id
  court_id = case_search.found_case.court_id
  case_number = case_search.found_case.docket_number
  efile_case_category = case_search.found_case.category
  efile_case_type = case_search.found_case.case_type
---
if: can_check_efile and not case_search.case_was_found and case_search.can_file_non_indexed_case
code: |
  case_number = case_search.non_indexed_docket_number
  efile_case_category = user_chosen_case_category
  efile_case_type = user_chosen_case_type
---
id: ending screen
event: ending_screen
question: |
  All done
subquestion: |
  Thank you for using ILAO Easy Forms!
  
  This program does not file your Appearance with the court or deliver it to other parties in your case. You will need to do this yourself.
#buttons:
#  - Delete answers and restart: restart
#  - Exit: exit
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} Sign-in](${url_of('login', next=interview_url())}) or [register](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  
  ${ action_button_html(interview_url(i="docassemble.ILAOEfile:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
objects:
  - illinois_appearance_attachment: ALDocument.using(title="Appearance Form", filename="appearance.pdf", has_addendum=False)
  - illinois_appearance_instructions: ALDocument.using(title="Appearance Instructions", filename="appearance_instructions.pdf", has_addendum=False)
  - illinois_appearance_additional: ALDocument.using(title="Additional Proof of Delivery", filename="appearance_additional_proof_delivery.pdf", has_addendum=False)
  - illinois_appearance_additional_2: ALDocument.using(title="Additional Proof of Delivery 2", filename="appearance_additional_proof_delivery_2.pdf", has_addendum=False)
  - illinois_appearance_additional_3: ALDocument.using(title="Additional Proof of Delivery 3", filename="appearance_additional_proof_delivery_3.pdf", has_addendum=False)
  - illinois_appearance_additional_blank: ALDocument.using(title="Additional Proof of Delivery (blank)", filename="appearance_additional_proof_delivery_blank.pdf", has_addendum=False)
---
code: |
  illinois_appearance_bundle.enabled = True
  illinois_appearance_attachment.enabled = True
  illinois_appearance_instructions.enabled = True
  illinois_appearance_additional.enabled = False
  illinois_appearance_additional_2.enabled = False
  illinois_appearance_additional_3.enabled = False
  illinois_appearance_additional_blank.enabled = False

  if delivery_parties.number() < 3:
    illinois_appearance_attachment.enabled = True
    illinois_appearance_instructions.enabled = True
  elif delivery_parties.number() < 5:
    illinois_appearance_attachment.enabled = True
    illinois_appearance_instructions.enabled = True
    illinois_appearance_additional.enabled = True
  elif delivery_parties.number() < 7:
    illinois_appearance_attachment.enabled = True
    illinois_appearance_instructions.enabled = True
    illinois_appearance_additional.enabled = True
    illinois_appearance_additional_2.enabled = True
  elif delivery_parties.number() < 9:
    illinois_appearance_attachment.enabled = True
    illinois_appearance_instructions.enabled = True
    illinois_appearance_additional.enabled = True
    illinois_appearance_additional_2.enabled = True
    illinois_appearance_additional_3.enabled = True
  else:
    illinois_appearance_attachment.enabled = True
    illinois_appearance_instructions.enabled = True
    illinois_appearance_additional.enabled = True
    illinois_appearance_additional_2.enabled = True
    illinois_appearance_additional_3.enabled = True
    illinois_appearance_additional_blank.enabled = True
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[illinois_appearance_instructions, illinois_appearance_bundle, illinois_appearance_additional_blank, IL_fee_waiver_Post_interview_instructions, IL_fee_waiver_full_for_user, IL_fee_waiver_order], filename="appearance.pdf", title="Download all forms")
  - al_court_bundle: ALDocumentBundle.using(elements=court_bundle_list, filename="appearance.pdf", title="Appearance")
---
objects:
  - illinois_appearance_bundle: ALDocumentBundle.using(elements=[illinois_appearance_attachment, illinois_appearance_additional, illinois_appearance_additional_2, illinois_appearance_additional_3], filename="appearance.pdf", title="Appearance", enabled=True)
  - illinois_jury_demand_bundle: ALDocumentBundle.using(elements=[illinois_appearance_attachment, illinois_appearance_additional, illinois_appearance_additional_2, illinois_appearance_additional_3], filename="jury_demand.pdf", title="Jury Demand")
---
code: |
  if IL_fee_waiver_order.filing_type == 'none available':
    court_bundle_list = [
        illinois_appearance_bundle,
        illinois_jury_demand_bundle,
        IL_fee_waiver_full_for_court,
        IL_fee_waiver_supplement,
    ]
  else:
    court_bundle_list = [
        illinois_appearance_bundle,
        illinois_jury_demand_bundle,
        IL_fee_waiver_full_for_court,
        IL_fee_waiver_supplement,
        IL_fee_waiver_order,
    ]
---
attachment:
  variable name: illinois_appearance_instructions[i]
  name: illinois_appearance_instructions
  filename: appearance-instructions
  skip undefined: True
  editable: False
  pdf template file: appearance_instructions_with_fake_field.pdf
  fields:
      - "fake": ${ "" }
---
attachment:
  variable name: illinois_appearance_attachment[i]
  name: illinois_appearance_attachment
  filename: appearance
  skip undefined: True
  editable: False
  pdf template file: appearance_edited.pdf
  fields:
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": ${ users.full_names() if user_started_case else other_parties.full_names() }
      - "defendants": ${ other_parties.full_names() if user_started_case else users.full_names() }
      - "user__1": ${ users[0].name.full(middle="full") }
      - "user__2": ${ users[0].name.full(middle="full") }
      - "user__3": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one__1": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_line_one__2": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip__1": ${ users[0].address.line_two() }
      - "user_mail_address_city_state_zip__2": ${ users[0].address.line_two() }
      - "user_phone_number__1": ${ phone_number_formatted(users[0].phone_number) }
      - "user_phone_number__2": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "user_email__2": ${ users[0].email if users[0].email_notice else '' }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "case_number__3": ${ case_number }
      - "judge_trial": ${ trial_with == "judge_only" }
      - "six_person_jury_trial": ${ trial_with == "judge_and_6_jury" }
      - "twelve_person_jury_trial": ${ trial_with == "judge_and_12_jury" }
      - "e_sign_name__1": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "e_sign_name__2": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "is_email_notice_yes": ${ users[0].email_notice }
      - "delivery_party1_name_full": | 
          % if delivery_parties[0].is_represented:
          ${ delivery_parties[0].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[0].name.full(middle="full") })
          % else:
          ${ delivery_parties[0].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[0].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[0].delivery_email if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[0].hand_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[0].mail_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[0].efm_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[0].email_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[0].delivery_date if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[0].delivery_time, format='h:mm') if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if format_time(delivery_parties[0].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if format_time(delivery_parties[0].delivery_time, format='a')=='PM' else '' }

      - "delivery_party2_name_full": | 
          % if delivery_parties[1].is_represented:
          ${ delivery_parties[1].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[1].name.full(middle="full") })
          % else:
          ${ delivery_parties[1].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[1].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[1].delivery_email if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[1].hand_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[1].mail_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[1].efm_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[1].email_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[1].delivery_date if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[1].delivery_time, format='h:mm') if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if format_time(delivery_parties[1].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if format_time(delivery_parties[1].delivery_time, format='a')=='PM' else '' }

      - "is_additional_proof_delivery_yes": ${ delivery_parties.number() > 2 }
---
attachment:
  variable name: illinois_appearance_additional[i]
  name: illinois_appearance_additional
  filename: appearance-additional-delivery
  skip undefined: True
  editable: False
  pdf template file: appearance_additional_proof_delivery_edited.pdf
  fields:
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "plaintiffs": ${ users.full_names() if user_started_case else other_parties.full_names() }
      - "defendants": ${ other_parties.full_names() if user_started_case else users.full_names() }
      - "form_to_be_delivered": ${ form_name }
      - "delivery_party1_name_full": | 
          % if delivery_parties[2].is_represented:
          ${ delivery_parties[2].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[2].name.full(middle="full") })
          % else:
          ${ delivery_parties[2].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[2].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[2].delivery_email if delivery_parties[2].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[2].hand_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[2].mail_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[2].efm_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[2].email_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[2].delivery_date if delivery_parties[2].knows_delivery_method and delivery_parties[2].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[2].delivery_time, format='h:mm') if delivery_parties[2].knows_delivery_method and delivery_parties[2].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if format_time(delivery_parties[2].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if format_time(delivery_parties[2].delivery_time, format='a')=='PM' else '' }
      
      - "delivery_party2_name_full": | 
          % if delivery_parties[3].is_represented:
          ${ delivery_parties[3].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[3].name.full(middle="full") })
          % else:
          ${ delivery_parties[3].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[3].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[3].delivery_email if delivery_parties[3].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[3].hand_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[3].mail_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[3].efm_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[3].email_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[3].delivery_date if delivery_parties[3].knows_delivery_method and delivery_parties[3].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[3].delivery_time, format='h:mm') if delivery_parties[3].knows_delivery_method and delivery_parties[3].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if format_time(delivery_parties[3].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if format_time(delivery_parties[3].delivery_time, format='a')=='PM' else '' }

      - "user": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip": ${ users[0].address.line_two() }
      - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "e_sign_name": ${ users[0].name.full(middle="full") if e_signature else '' }
---
attachment:
  variable name: illinois_appearance_additional_2[i]
  name: illinois_appearance_additional_2
  filename: appearance-additional-delivery-2
  skip undefined: True
  editable: False
  pdf template file: appearance_additional_proof_delivery_edited.pdf
  fields:
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "plaintiffs": ${ users.full_names() if user_started_case else other_parties.full_names() }
      - "defendants": ${ other_parties.full_names() if user_started_case else users.full_names() }
      - "form_to_be_delivered": ${ form_name }

      - "delivery_party1_name_full": | 
          % if delivery_parties[4].is_represented:
          ${ delivery_parties[4].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[4].name.full(middle="full") })
          % else:
          ${ delivery_parties[4].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[4].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[4].delivery_email if delivery_parties[4].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[4].hand_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[4].mail_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[4].efm_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[4].email_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[4].delivery_date if delivery_parties[4].knows_delivery_method and delivery_parties[4].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[4].delivery_time, format='h:mm') if delivery_parties[4].knows_delivery_method and delivery_parties[4].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if format_time(delivery_parties[4].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if format_time(delivery_parties[4].delivery_time, format='a')=='PM' else '' }
      
      - "delivery_party2_name_full": | 
          % if delivery_parties[5].is_represented:
          ${ delivery_parties[5].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[5].name.full(middle="full") })
          % else:
          ${ delivery_parties[5].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[5].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[5].delivery_email if delivery_parties[5].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[5].hand_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[5].mail_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[5].efm_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[5].email_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[5].delivery_date if delivery_parties[5].knows_delivery_method and delivery_parties[5].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[5].delivery_time, format='h:mm') if delivery_parties.knows_delivery_method and delivery_parties[5].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if format_time(delivery_parties[5].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if format_time(delivery_parties[5].delivery_time, format='a')=='PM' else '' }

      - "user": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip": ${ users[0].address.line_two() }
      - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "e_sign_name": ${ users[0].name.full(middle="full") if e_signature else '' }
---
attachment:
  variable name: illinois_appearance_additional_3[i]
  name: illinois_appearance_additional_3
  filename: appearance-additional-delivery-3
  skip undefined: True
  editable: False
  pdf template file: appearance_additional_proof_delivery_edited.pdf
  fields:
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "plaintiffs": ${ users.full_names() if user_started_case else other_parties.full_names() }
      - "defendants": ${ other_parties.full_names() if user_started_case else users.full_names() }
      - "form_to_be_delivered": ${ form_name }

      - "delivery_party1_name_full": | 
          % if delivery_parties[6].is_represented:
          ${ delivery_parties[6].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[6].name.full(middle="full") })
          % else:
          ${ delivery_parties[6].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[6].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[6].delivery_email if delivery_parties[6].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[6].hand_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[6].mail_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[6].efm_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[6].email_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[6].delivery_date if delivery_parties[6].knows_delivery_method and delivery_parties[6].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[6].delivery_time, format='h:mm') if delivery_parties[6].knows_delivery_method and delivery_parties[6].knows_delivery_time else '' }
      - "is_delivery_party1_am_yes": ${ True if format_time(delivery_parties[6].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party1_am_no": ${ True if format_time(delivery_parties[6].delivery_time, format='a')=='PM' else '' }
      
      - "delivery_party2_name_full": | 
          % if delivery_parties[7].is_represented:
          ${ delivery_parties[7].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[7].name.full(middle="full") })
          % else:
          ${ delivery_parties[7].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[7].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[7].delivery_email if delivery_parties[7].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[7].hand_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[7].mail_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[7].efm_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[7].email_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[7].delivery_date if delivery_parties[7].knows_delivery_method and delivery_parties[7].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[7].delivery_time, format='h:mm') if delivery_parties[7].knows_delivery_method and delivery_parties[7].knows_delivery_time else '' }
      - "is_delivery_party2_am_yes": ${ True if format_time(delivery_parties[7].delivery_time, format='a')=='AM' else '' }
      - "is_delivery_party2_am_no": ${ True if format_time(delivery_parties[7].delivery_time, format='a')=='PM' else '' }
      
      - "user": ${ users[0].name.full(middle="full") }
      - "user_mail_address_line_one": ${ users[0].address.line_one(bare=True) }
      - "user_mail_address_city_state_zip": ${ users[0].address.line_two() }
      - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "e_sign_name": ${ users[0].name.full(middle="full") if e_signature else '' }
---
attachment:
  variable name: illinois_appearance_additional_blank[i]
  name: illinois_appearance_additional_blank
  filename: appearance-additional-delivery-blank
  skip undefined: True
  editable: True
  pdf template file: appearance_additional_proof_delivery_edited.pdf
  fields:
      - "trial_court_county": ${ "" }
---
############### Review page
id: review screen
event: review_appearance
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - Edit: 
      - user_ask_role
      - recompute:
        - user_role
    button: |
      % if user_started_case:
        **Your role:** plaintiff or petitioner
      % else:
        **Your role:** defendant or respondent
      % endif
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  #- Edit: 
  #    - trial_court_index
  #    - recompute:
  #      - trial_court
  #  button: |
  #    **County where this case is filed:**
  #    ${ trial_court }
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }
  - Edit: trial_with
    button: |
      **Trial type:**
      % if trial_with == "judge_only":
      Judge only
      % elif trial_with == "judge_and_6_jury":
      Judge and six-person jury
      % else:
      Judge and twelve-person jury
      % endif
  #- label: Edit
  #  fields:
  #    - case_search.do_what_choice
  #    - recompute:
  #      - case_search.found_case
  #  button: |
  #    ** Court Case:**
  #    ${ case_search.found_case.title } (${ case_search.found_case.date })
  #  show if: can_check_efile
  # TODO(brycew): we need to essentially retrigger the entire interview if they want to
  # change this. Not sure how best to do that.
  #- Edit: user_wants_efile
  #  button: |
  #    You said you **${ "did" if user_wants_efile else "did not" }** want to file a fee-waiver
  #  show if: efile_setup
  #  follow up:
  #    - tyler_login
  #    - found_case
  #    -
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${ phone_number_formatted(users[0].phone_number) }
  - Edit: users[0].email_notice
    button: |
      **Do you want to receive court notices by email?**
      ${ word(yesno(users[0].email_notice)) }
  - Edit: users[0].email
    button: |
      **Your email:**
      ${ users[0].email }
    show if: users[0].email_notice and not users[0].is_form_filler
  - Edit:
      - illinois_appearance_attachment.document_type
      - recompute:
        - IL_fee_waiver_attachment.document_type
        - IL_fee_waiver_supplement.document_type
        - IL_fee_waiver_order.document_type
    button: |
      % if illinois_appearance_attachment.document_type == '5766' or illinois_appearance_attachment.document_type == '141579' or illinois_appearance_attachment.document_type == '133166':
      The judge **did not order the case to be sealed**.
      % else:
      The judge **did order the case to be sealed**.
      % endif
    show if: can_check_efile
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature?**
      ${ word(yesno(e_signature)) }
    show if: not can_check_efile
  - note: |
      If you want to change the court or case you are filing into, you will have to
      restart the interview from the beginning.
      
      ${ action_button_html(url_of('new_session'), label='Start again', color='warning', size='md') }
    show if: can_check_efile
---
#need: yes_no_unknown
continue button field: x.review_delivery
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
review: 
  - Edit: x.name.first
    button: |
      **Party name:**
      ${ x.name.full(middle="full") }
  - Edit: x.is_represented
    button: |
      **Does ${ x.name.full(middle="full") } have a lawyer?**
      % if x.is_represented is None:
      I don't know
      % else:
      ${ word(yesno(x.is_represented)) }
      % endif
  - Edit: x.lawyer.name.first
    button: |
      **Lawyer name:**
      ${ x.lawyer.name.full(middle="full") }
    show if: x.is_represented
  - Edit: x.address.address
    button: |
      % if x.is_represented == True:
      **${ x.lawyer.name.full(middle="full") }'s address: **
      % else:
      **${ x.name.full(middle="full") }'s address: **
      % endif
      ${ x.address.on_one_line(bare=True) }
  - Edit: x.knows_delivery_method
    button: |
      **Do you know how you will deliver your forms to them?**
      ${ word(yesno(x.knows_delivery_method)) }
  - Edit: x.hand_delivery
    button: |
      **Delivery by: (Edit to view and change details)**
      
      % if x.efm_delivery == True:
        * E-filing system
      % endif
      % if x.email_delivery == True:
        * Email
      % endif
      % if x.hand_delivery == True:
        * Hand
      % endif
      % if x.mail_delivery == True:
        * US mail or a delivery company
      % endif
    show if: x.knows_delivery_method
  - Edit: x.delivery_date
    button: |
      **Delivery on:**
      ${ x.delivery_date } at ${ format_time(x.delivery_time, "h:mm a") }
    show if: x.knows_delivery_method
---
continue button field: users.revisit
question: |
  Edit the ${ user_ask_role }s
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Party, lawyer, address, and delivery info: |
      action_button_html(url_action(row_item.attr_name("review_delivery")), label="Edit", icon="pencil-alt") #if not row_item == users[0] else ""
#edit:
#  - name.first
delete buttons: True
confirm: True
---
continue button field: other_parties.revisit
question: |
  % if user_started_case:
    Edit the defendants
  % else:
    Edit the plaintiffs
  % endif
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Party, lawyer, address, and delivery info: |
      action_button_html(url_action(row_item.attr_name("review_delivery")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
template: email_confirmation
subject: |
  Important Appearance and Fee waiver e-filing information
content: |
  <!DOCTYPE html>
  <html>
  <head>
    <title>Illinois Legal Aid Online</title>
  </head>
  <body>
  <p>Hello ${ users[0].name },</p>
  <p><strong>Your Appearance and Fee Waiver forms were sent to the Circuit Clerk of ${ trial_court.address.county } County. They will accept or reject your filing.</strong></p>
  <p>A person in the clerk's office has to accept the forms before they are officially filed.</p>
  <p><strong>What's next?</strong></p>
  <p>You should receive an email from Odyssey eFileIL (no-reply@efilingmail.tylertech.cloud). Your forms were given an Envelope Number, which will be used to track your filing.</p>
  <p>The clerk will review what you filed.</p>
  <ul>
    <li>If it looks good, they will <strong>accept</strong> it. You will receive another email from Odyssey eFileIL explaining that the envelope was accepted. The email will include a link to a copy of your court forms with the clerk's stamp.</li>
    <li>If there is something wrong with the filing, they will <strong>reject</strong> it. You should receive another email from Odyssey eFileIL with an explanation of what needs to be fixed.</li>
  </ul>
  <p>After your filing is accepted, it is your responsibility to deliver the Appearance to the other parties in your case.</p>
  <p>Make sure you record how you delivered the Appearance to the other parties in the Proof of Delivery forms.</p>
  <p><strong>Where to go for help</strong></p>
  <p>Contact the clerk at ${ trial_court.phone } to learn:</p>
  <ul>
    <li>If your filing is accepted,</li>
    <li>If you have a court date for your fee waiver, and</li>
    <li>What's next in your case.</li>
  </ul>
  <p>Use <a href="https://illinois.tylerhost.net/OfsWeb" title="Odyssey eFileIL">Odyssey eFileIL</a> if you need to e-file other forms into your case or correct filings that the clerk rejected. You can use the same e-filing account you used to e-file your Appearance and Fee waiver.</p>
  <p>Visit <a href="https://www.ilcourthelp.gov" title="Illinois Court Help">Illinois Court Help</a> or call or text (833) 411-1121 to ask a trained court guide questions about e-filing and other court processes, court forms, and going to court.</p>
  <p>Thank you for using ILAO Easy Forms.<br /><a href="https://www.illinoislegalaid.org/" title="Illinois Legal Aid Online">Illinois Legal Aid Online</a></p>
  </body>
  </html>
---
template: neutral_email
subject: |
  Clerk response to your e-filed Appearance and Fee waiver
content: |
  <!DOCTYPE html>
  <html>
  <head>
    <title>Illinois Legal Aid Online</title>
  </head>
  <body>
  <p>Hello ${ users[0].name },</p>
  <p><strong>The Circuit Clerk of ${ trial_court } County has sent a response to your filing in {{ case_title }}.</strong></p>

  <p><q>{{ status }}</q></p>

  <p>{{ message_text }}</p>

  <p>Contact the clerk at ${ trial_court.phone } if you have questions.</p>

  <p><strong>Where to go for help</strong></p>
  <p>Contact the clerk at ${ trial_court.phone } to learn:</p>
  <ul>
    <li>If you have a court date for your fee waiver, and</li>
    <li>What's next in your case.</li>
  </ul>
  <p>Use <a href="https://illinois.tylerhost.net/OfsWeb" title="Odyssey eFileIL">Odyssey eFileIL</a> if you need to e-file other forms into your case or correct filings that the clerk rejected. You can use the same e-filing account you used to e-file your Appearance and Fee waiver.</p>
  <p>Visit <a href="https://www.ilcourthelp.gov" title="Illinois Court Help">Illinois Court Help</a> or call or text (833) 411-1121 to ask a trained court guide questions about e-filing and other court processes, court forms, and going to court.</p>
  <p>Thank you for using ILAO Easy Forms.<br /><a href="https://www.illinoislegalaid.org/" title="Illinois Legal Aid Online">Illinois Legal Aid Online</a></p>
  </body>
  </html>
---
template: acceptance_email
subject: |
  Clerk response to your e-filed Appearance and Fee waiver
content: |
  <!DOCTYPE html>
  <html>
  <head>
    <title>Illinois Legal Aid Online</title>
  </head>
  <body>
  <p>Hello ${ users[0].name },</p>
  <p><strong>The Circuit Clerk of ${ trial_court } County has sent a response to your filing in {{ case_title }}.</strong></p>

  <p><q>{{ status }}</q></p>

  <p>{{ message_text }}</p>

  <p>Contact the clerk at ${ trial_court.phone } if you have questions.</p>

  <p><strong>Where to go for help</strong></p>
  <p>Contact the clerk at ${ trial_court.phone } to learn:</p>
  <ul>
    <li>If you have a court date for your fee waiver, and</li>
    <li>What's next in your case.</li>
  </ul>
  <p>Use <a href="https://illinois.tylerhost.net/OfsWeb" title="Odyssey eFileIL">Odyssey eFileIL</a> if you need to e-file other forms into your case or correct filings that the clerk rejected. You can use the same e-filing account you used to e-file your Appearance and Fee waiver.</p>
  <p>Visit <a href="https://www.ilcourthelp.gov" title="Illinois Court Help">Illinois Court Help</a> or call or text (833) 411-1121 to ask a trained court guide questions about e-filing and other court processes, court forms, and going to court.</p>
  <p>Thank you for using ILAO Easy Forms.<br /><a href="https://www.illinoislegalaid.org/" title="Illinois Legal Aid Online">Illinois Legal Aid Online</a></p>
  </body>
  </html>
---
template: rejection_email
subject: |
  Clerk response to your e-filed Appearance and Fee waiver
content: |
  <!DOCTYPE html>
  <html>
  <head>
    <title>Illinois Legal Aid Online</title>
  </head>
  <body>
  <p>Hello ${ users[0].name },</p>
  <p><strong>The Circuit Clerk of ${ trial_court } County has sent a response to your filing in {{ case_title }}.</strong></p>

  <p><q>{{ status }}</q></p>

  <p>{{ message_text }}</p>

  <p>Contact the clerk at ${ trial_court.phone } if you have questions.</p>

  <p><strong>Where to go for help</strong></p>
  <p>Contact the clerk at ${ trial_court.phone } to learn:</p>
  <ul>
    <li>How to fix your filing?</li>
    <li>If you have a court date for your fee waiver, and</li>
    <li>What's next in your case.</li>
  </ul>
  <p>Use <a href="https://illinois.tylerhost.net/OfsWeb" title="Odyssey eFileIL">Odyssey eFileIL</a> if you need to e-file other forms into your case or correct filings that the clerk rejected. You can use the same e-filing account you used to e-file your Appearance and Fee waiver.</p>
  <p>Visit <a href="https://www.ilcourthelp.gov" title="Illinois Court Help">Illinois Court Help</a> or call or text (833) 411-1121 to ask a trained court guide questions about e-filing and other court processes, court forms, and going to court.</p>
  <p>Thank you for using ILAO Easy Forms.<br /><a href="https://www.illinoislegalaid.org/" title="Illinois Legal Aid Online">Illinois Legal Aid Online</a></p>
  </body>
  </html>
---
